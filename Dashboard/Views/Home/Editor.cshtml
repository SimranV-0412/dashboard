@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Dashboard.Models.ContentModel
@{
    ViewData["Title"] = "Editor";
}
@*adding CKeditor*@ 

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/js/ckeditor/ckeditor.js"></script>

<body>

    <h3>Text Editor</h3>

    <br />
    @using (Html.BeginForm("PostPreview", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { 
                @class = "control-label col-md-2" 
            })
            <br/>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { 
                    htmlAttributes = new 
                    { 
                        @class = "form-control" 
                    } 
                })
                @Html.ValidationMessageFor(model => model.Title, "", new {
                    @class = "text-danger"
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { 
                @class = "control-label col-md-2" 
            })
            <br/>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { 
                    @id = "FullDescription", @class = "form-control", @rows = "200" 
                })
                @Html.ValidationMessageFor(model => model.Content, "", new { 
                    @class = "text-danger" 
                })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.Label("pdfFile","PDF File", htmlAttributes: new { @class = "control-label col-md-2" })
            <br />
            <div class="col-md-10">
                <input type="file" name="pdfFile" class="form-control" />
                @Html.HiddenFor(model => model.PdfFileName)
            </div>
        </div>
        <div>
            <input type="submit" value="Submit" />
        </div>
        
    }
    <script>
        CKEDITOR.replace("FullDescription",{
            filebrowserUploadUrl: 'D:/project_dashboard/dashboard/Dashboard/wwwroot/UploadImage/', // Replace ' / upload_image' with the actual URL for handling image uploads
            filebrowserUploadMethod: 'form',
            //filebrowserUploadFormHeaders: {
            //    'X-CSRF-Token': 'your_csrf_token' // Add CSRF token header if required
            //}
        });
    </script>
</body>
      @*  //CKEDITOR.on('dialogDefinition', function (ev) {
        //    var dialogName = ev.data.name;
        //    var dialogDefinition = ev.data.definition;
        //    if (dialogName === 'image') {
        //        dialogDefinition.filebrowserUploadUrl = '@Url.Action("UploadImage", "Home")';
        //        dialogDefinition.filebrowserUploadMethod = 'form';
        //        //dialogDefinition.filebrowserUploadFormHeaders = {
        //        //    'X-CSRF-Token': 'your_csrf_token' // Add CSRF token header if required
        //        //};
        //    }
        //});*@
           @* @*<div>
                @Html.TextBox("file", "", new {  type= "file"}) <br />
                @*<input type="submit" value="Upload" />*@
                @*@ViewBag.Message
            </div>*@
